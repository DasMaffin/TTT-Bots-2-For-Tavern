local adjectives = {
    "Adorable",
    "Aggressive",
    "Agreeable",
    "Alert",
    "Alive",
    "Amused",
    "Angry",
    "Annoyed",
    "Annoying",
    "Anxious",
    "Arrogant",
    "Ashamed",
    "Attractive",
    "Average",
    "Awful",
    "Bad",
    "Beautiful",
    "Better",
    "Bewildered",
    "Black",
    "Bloody",
    "Blue",
    "Blue-eyed",
    "Boiling",
    "Boorish",
    "Bored",
    "Brainy",
    "Brash",
    "Brave",
    "Breakable",
    "Bright",
    "Busy",
    "Calm",
    "Capable",
    "Careful",
    "Cautious",
    "Charming",
    "Cheerful",
    "Clean",
    "Clear",
    "Clever",
    "Cloudy",
    "Clumsy",
    "Colorful",
    "Combative",
    "Comfortable",
    "Concerned",
    "Condemned",
    "Confused",
    "Cooperative",
    "Crazy",
    "Creepy",
    "Crowded",
    "Cruel",
    "Curious",
    "Cute",
    "Dangerous",
    "Dark",
    "Dead",
    "Defeated",
    "Defiant",
    "Delightful",
    "Depressed",
    "Determined",
    "Different",
    "Difficult",
    "Disgusted",
    "Distinct",
    "Disturbed",
    "Dizzy",
    "Doubtful",
    "Drab",
    "Dull",
    "Eager",
    "Easy",
    "Elated",
    "Elegant",
    "Embarrassed",
    "Enchanting",
    "Encouraging",
    "Energetic",
    "Enthusiastic",
    "Envious",
    "Evil",
    "Excited",
    "Expensive",
    "Exuberant",
    "Fair",
    "Faithful",
    "Famous",
    "Fancy",
    "Fantastic",
    "Fierce",
    "Filthy",
    "Fine",
    "Foolish",
    "Fragile",
    "Frail",
    "Frantic",
    "Friendly",
    "Frightened",
    "Funny",
    "Gentle",
    "Gifted",
    "Glamorous",
    "Gleaming",
    "Glorious",
    "Good",
    "Gorgeous",
    "Graceful",
    "Grieving",
    "Grotesque",
    "Grumpy",
    "Handsome",
    "Happy",
    "Healthy",
    "Helpful",
    "Helpless",
    "Hilarious",
    "Homeless",
    "Homely",
    "Horrible",
    "Hungry",
    "Hurt",
    "Ill",
    "Important",
    "Impossible",
    "Inexpensive",
    "Innocent",
    "Inquisitive",
    "Itchy",
    "Jealous",
    "Jittery",
    "Jolly",
    "Joyous",
    "Kind",
    "Lazy",
    "Light",
    "Lively",
    "Lonely",
    "Long",
    "Lovely",
    "Lucky",
    "Magnificent",
    "Misty",
    "Modern",
    "Motionless",
    "Muddy",
    "Mushy",
    "Mysterious",
    "Nasty",
    "Naughty",
    "Nervous",
    "Nice",
    "Nutty",
    "Obedient",
    "Obnoxious",
    "Odd",
    "Old-fashioned",
    "Open",
    "Outrageous",
    "Outstanding",
    "Panicky",
    "Perfect",
    "Plain",
    "Pleasant",
    "Poised",
    "Poor",
    "Powerful",
    "Precious",
    "Prickly",
    "Proud",
    "Puzzled",
    "Real",
    "Relieved",
    "Repulsive",
    "Rich",
    "Scary",
    "Selfish",
    "Shiny",
    "Shy",
    "Silly",
    "Sleepy",
    "Smiling",
    "Smoggy",
    "Sore",
    "Sparkling",
    "Splendid",
    "Spotless",
    "Stormy",
    "Strange",
    "Stupid",
    "Successful",
    "Super",
    "Talented",
    "Tame",
    "Tender",
    "Tense",
    "Terrible",
    "Testy",
    "Thankful",
    "Thoughtful",
    "Thoughtless",
    "Tired",
    "Tough",
    "Troubled",
    "Ugliest",
    "Ugly",
    "Uninterested",
    "Unsightly",
    "Unusual",
    "Upset",
    "Uptight",
    "Vast",
    "Victorious",
    "Vivacious",
    "Wandering",
    "Weary",
    "Wicked",
    "Wide-eyed",
    "Wild",
    "Witty",
    "Worrisome",
    "Wrong",
    "Zany",
    "Zealous",
    "Zippy",
    "Zonked",
    "Zooted"
}

local animalnames = {
    "Aardvark",
    "Albatross",
    "Alligator",
    "Alpaca",
    "Ant",
    "Anteater",
    "Antelope",
    "Ape",
    "Armadillo",
    "Donkey",
    "Baboon",
    "Badger",
    "Barracuda",
    "Bat",
    "Bear",
    "Beaver",
    "Bee",
    "Bison",
    "Boar",
    "Buffalo",
    "Butterfly",
    "Camel",
    "Capybara",
    "Caribou",
    "Cassowary",
    "Cat",
    "Caterpillar",
    "Cattle",
    "Chamois",
    "Cheetah",
    "Chicken",
    "Chimpanzee",
    "Chinchilla",
    "Chough",
    "Clam",
    "Cobra",
    "Cockroach",
    "Cod",
    "Cormorant",
    "Coyote",
    "Crab",
    "Crane",
    "Crocodile",
    "Crow",
    "Curlew",
    "Deer",
    "Dinosaur",
    "Dog",
    "Dogfish",
    "Dolphin",
    "Dotterel",
    "Dove",
    "Dragonfly",
    "Duck",
    "Dugong",
    "Dunlin",
    "Eagle",
    "Echidna",
    "Eel",
    "Eland",
    "Elephant",
    "Elk",
    "Emu",
    "Falcon",
    "Ferret",
    "Finch",
    "Fish",
    "Flamingo",
    "Fly",
    "Fox",
    "Frog",
    "Gaur",
    "Gazelle",
    "Gerbil",
    "Giant Panda",
    "Giraffe",
    "Gnat",
    "Gnu",
    "Goat",
    "Goldfinch",
    "Goldfish",
    "Goose",
    "Gorilla",
    "Goshawk",
    "Grasshopper",
    "Grouse",
    "Guanaco",
    "Gull",
    "Hamster",
    "Hare",
    "Hawk",
    "Hedgehog",
    "Heron",
    "Herring",
    "Hippopotamus",
    "Hornet",
    "Horse",
    "Human",
    "Hummingbird",
    "Hyena",
    "Ibex",
    "Ibis",
    "Jackal",
    "Jaguar",
    "Jay",
    "Jellyfish",
    "Kangaroo",
    "Kingfisher",
    "Koala",
    "Kookabura",
    "Kouprey",
    "Kudu",
    "Lapwing",
    "Lark",
    "Lemur",
    "Leopard",
    "Lion",
    "Llama",
    "Lobster",
    "Locust",
    "Loris",
    "Louse",
    "Lyrebird",
    "Magpie",
    "Mallard",
    "Manatee",
    "Mandrill",
    "Mantis",
    "Marten",
    "Meerkat",
    "Mink",
    "Mole",
    "Mongoose",
    "Monkey",
    "Moose",
    "Mosquito",
    "Mouse",
    "Narwhal",
    "Newt",
    "Nightingale",
    "Octopus",
    "Okapi",
    "Opossum",
    "Oryx",
    "Ostrich",
    "Otter",
    "Owl",
    "Oyster",
    "Panther",
    "Parrot",
    "Partridge",
    "Peafowl",
    "Pelican",
    "Penguin",
    "Pheasant",
    "Pig",
    "Pigeon",
    "Polar Bear",
    "Pony",
    "Porcupine",
    "Porpoise",
    "Quail",
    "Quelea",
    "Quetzal",
    "Rabbit",
    "Raccoon",
    "Rail",
    "Ram",
    "Rat",
    "Raven",
    "Red Deer",
    "Red Panda",
    "Reindeer",
    "Rhinoceros",
    "Rook",
    "Salamander",
    "Salmon",
    "Sand Dollar",
    "Sandpiper",
    "Sardine",
    "Scorpion",
    "Seahorse",
    "Seal",
    "Shark",
    "Sheep",
    "Shrew",
    "Skunk",
    "Snail",
    "Snake",
    "Sparrow",
    "Spider",
    "Spoonbill",
    "Squid",
    "Squirrel",
    "Starling",
    "Stingray",
    "Stinkbug",
    "Stork",
    "Swallow",
    "Swan",
    "Tapir",
    "Tarsier",
    "Termite",
    "Tiger",
    "Toad",
    "Trout",
    "Turkey",
    "Turtle",
    "Viper",
    "Vulture",
    "Wallaby",
    "Walrus",
    "Wasp",
    "Weasel",
    "Whale",
    "Wildcat",
    "Wolf",
    "Wolverine",
    "Wombat",
    "Woodcock",
    "Woodpecker",
    "Worm",
    "Wren",
    "Yak",
    "Zebra"
}

local humannames = {
    "Aaron",
    "Abigail",
    "Adam",
    "Adrian",
    "Agatha",
    "Alan",
    "Albert",
    "Alexander",
    "Alice",
    "Amanda",
    "Amelia",
    "Amy",
    "Andrew",
    "Angela",
    "Anna",
    "Anne",
    "Anthony",
    "Arthur",
    "Audrey",
    "Austin",
    "Barbara",
    "Benjamin",
    "Bernard",
    "Bessie",
    "Betty",
    "Boris",
    "Brandon",
    "Brian",
    "Bruce",
    "Carol",
    "Carolyn",
    "Charles",
    "Charlotte",
    "Chloe",
    "Christopher",
    "Claire",
    "Clara",
    "Clarence",
    "Daniel",
    "David",
    "Deborah",
    "Debra",
    "Dennis",
    "Diana",
    "Diane",
    "Donald",
    "Dorothy",
    "Dylan",
    "Edward",
    "Elizabeth",
    "Emily",
    "Emma",
    "Eric",
    "Ethan",
    "Eugene",
    "Evelyn",
    "Frances",
    "Frank",
    "Fred",
    "Frederick",
    "Gabriel",
    "Gary",
    "George",
    "Gerald",
    "Gloria",
    "Grace",
    "Gregory",
    "Hannah",
    "Harold",
    "Harry",
    "Heather",
    "Henry",
    "Holly",
    "Howard",
    "Ian",
    "Isaac",
    "Isabel",
    "Jack",
    "Jacob",
    "James",
    "Jane",
    "Janet",
    "Jason",
    "Jean",
    "Jennifer",
    "Jeremy",
    "Jessica",
    "Joan",
    "Joe",
    "John",
    "Jonathan",
    "Joseph",
    "Joshua",
    "Joyce",
    "Judith",
    "Judy",
    "Julia",
    "Julian",
    "Julie",
    "Justin",
    "Karen",
    "Katherine",
    "Kathleen",
    "Kathryn",
    "Kathy",
    "Keith",
    "Kelly",
    "Kevin",
    "Kimberly",
    "Larry",
    "Laura",
    "Lauren",
    "Lawrence",
    "Lillian",
    "Linda",
    "Lisa",
    "Lois",
    "Lori",
    "Louis",
    "Lucas",
    "Lucy",
    "Luke",
    "Madison",
    "Margaret",
    "Maria",
    "Marie",
    "Martha",
    "Martin",
    "Mary",
    "Matthew",
    "Maureen",
    "Max",
    "Melanie",
    "Melissa",
    "Michael",
    "Michelle",
    "Mildred",
    "Molly",
    "Nancy",
    "Nathan",
    "Nicholas",
    "Nicole",
    "Noah",
    "Oliver",
    "Olivia",
    "Pamela",
    "Patricia",
    "Patrick",
    "Paul",
    "Peter",
    "Philip",
    "Phyllis",
    "Rachel",
    "Raymond",
    "Rebecca",
    "Richard",
    "Robert",
    "Roger",
    "Ronald",
    "Ruth",
    "Ryan",
    "Samantha",
    "Sandra",
    "Sara",
    "Sarah",
    "Scott",
    "Sean",
    "Sharon",
    "Shirley",
    "Stephanie",
    "Stephen",
    "Steve",
    "Steven",
    "Susan",
    "Tammy",
    "Taylor",
    "Thomas",
    "Timothy",
    "Tina",
    "Todd",
    "Virginia",
    "Wanda",
    "William",
    "Zachary"
}

local namePrefixes = {
    "The",
    "A",
    "An",
    "Your",
    "My",
    "His",
    "Her",
    "Their",
    "Our",
    "Your",
    "Blue",
    "Red",
    "Green",
    "Yellow",
    "Purple",
    "Orange",
    "Pink",
    "Black",
    "White",
}

local namePostfixes = {
    "The Great",
    "The Wise",
    "The Brave",
    ", M.D.",
    ", Esq.",
    "The Magnificent",
    "(Retired)",
    "The Terrible",
    "(Stupid)",
    "The Unfortunate",
}

-- Names suggested to me by community members.
-- Thanks to all of you! <3
-- WARNING: These names are not guaranteed to be safe for work, and many are offensive.
local communitynames = {
    "Chairdolf Sitler",
    "De_way",
    "Broseph Stalin",
    "Han Shot First",
    "Law Abiding Black Man",
    "Furry",
    "Hugh Janus",
    "Brazzers Enjoyer",
    "Würün",
    "BOT Nino",
    "Definitely Not a Traitor",
    "Duke Groundrunner",
    "Water is wet",
    "Vladimir Prutin",
    "Moist Mustard",
    "2ez4me",
    "Foxtrot",
    "ilikehacks666",
    "The Traitor!",
    "I am a traitor",
    "Imma newb",
    "No hacking",
    "sv_pure 1",
    "sv_cheats 1",
    "hey",
    "cool thing",
    "trigger_hurt",
    "Garry :D",
    "#worldspawn",
    "NutBlower",
    "Thiccy Bo Bicky",
    "Gestappo Agent",
    "Gazpacho Agent",
    "Fappero Mastero",
    "Oeuf",
    "Dat_boi",
    "KAWAAI",
    "Xxpro360mlgxX",
    "Hit_or_miss",
    "Danny Devito",
    "Jerry Seinfeld",
    "Hugh Mungus",
    "Ben Dover",
    "Leon Koc",
    "Juan_Gonzalas2007",
    "Bot",
    "Ur mom",
    "Call of Duty Enjoyer",
    "TTT Enjoyer",
    "Big_chungus",
    "im gay",
    "spermless",
    "spermlist",
    "bomb_planted",
    "traitor_lot?",
    "NoobDestroyer",
    "SudisCain",
    "Totally Not A Bot",
    "Etikawaspushed",
    "JoJo Fan",
    "ShuutYou",
    "RoboHobo",
    "HowDoYouLeave",
    "gm_odd",
    "Mr. CPU",
    "Mr. Taliban",
    "Obamium",
    "Tasty, M.D.",
    "The Mommy",
    "Legion",
    "Daddy (aka papa)",
    "The bomb",
    "Constance",
    "Kyle",
    "A wall",
    "Yobama",
    "Neckbeard the Anime Lord",
    "Neckbeard the Fat",
    "Hodd Toward",
    "Arnold Shpitz",
    "Corporal Pounder",
    "Brian",
    "Dr. Coomer",
    "Cheeseball",
    "DOOM",
    "John MEsa",
    "Gordon Freakman",
    "Bangbangbang",
    "Adolfdidnothingwrong",
    "HuntDownTheRefund",
    "Kitler",
    "Username",
    "GetShreqt",
    "ION CANNONEER",
    "Texas Red",
    "100% Winrate",
    "KOS ME",
    "Dead mod",
    "sex",
    "ihavecancer",
    "Big and sus",
    "not a russian",
    "instamothafocka",
    "floppa",
    "babyeater",
    "johnplaysgmod",
    "Quandale Dingle",
    "Pootis",
    "IBreakKnees",
    "Waltuh",
    "ScooterBarts",
    "Noted (not really)",
    "homies"
}


local Lib = TTTBots.Lib

function Lib.LeetSpeak(txt)
    local leet = {
        ["a"] = "4",
        ["b"] = "8",
        ["e"] = "3",
        ["g"] = "6",
        ["i"] = "1",
        ["l"] = "1",
        ["o"] = "0",
        ["s"] = "5",
        ["t"] = "7",
        ["z"] = "2"
    }

    local newtxt = ""

    for i = 1, #txt do
        local char = txt:sub(i, i)
        if leet[char] then
            newtxt = newtxt .. leet[char]
        else
            newtxt = newtxt .. char
        end
    end

    return newtxt
end

local function checkChars(str)
    -- check if less than 15 characters, return true if so
    return string.len(str) < 15
end

function Lib.GenerateName()
    local human_name = humannames[math.random(1, #humannames)]
    local animal_name = animalnames[math.random(1, #animalnames)]
    local adjective = adjectives[math.random(1, #adjectives)]
    local name_override = communitynames[math.random(1, #communitynames)]

    local number = math.random(1, 9999)
    local leetify = math.random(1, 100) > 94
    local use_number = math.random(1, 100) > 80
    local use_adjective = math.random(1, 100) > 60
    local use_animal = math.random(1, 100) > 50 -- else use human name
    local use_prefix = math.random(1, 100) > 80
    local use_postfix = math.random(1, 100) > 80

    local use_community_name = GetConVar("ttt_bot_community_names"):GetBool() and math.random(1, 100) > 30

    -- 1 = all caps, 2-5 = normal, 6-8 = no caps
    local capitalization = math.random(1, 8)

    local name = ""

    if not use_community_name then
        if use_adjective then
            name = adjective
        end

        if use_animal then
            name = name .. animal_name
        else
            name = name .. human_name
        end

        if use_number then
            name = name .. number
        end
    else
        name = name_override
    end

    if use_prefix and checkChars(name) then
        name = namePrefixes[math.random(1, #namePrefixes)] .. " " .. name
    end

    if use_postfix and checkChars(name) then
        name = name .. " " .. namePostfixes[math.random(1, #namePostfixes)]
    end

    if leetify then
        name = Lib.LeetSpeak(name)
    end

    if capitalization == 1 then
        name = name:upper()
    elseif capitalization >= 6 then
        name = name:lower()
    end

    -- Check if name exists already before returning
    for _, ply in pairs(player.GetAll()) do
        if ply:GetName():lower() == name:lower() then
            return Lib.GenerateName()
        end
    end

    return name
end